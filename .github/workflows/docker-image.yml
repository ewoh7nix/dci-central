name: Deployment Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build:
    name: Install, build and test the codes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build Node.js codes
        run: npm run build --if-present
      - name: Run unit test
        run: npm test

  build-image:
    needs: build
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    - name: Extract metadata for Docker
      uses: docker/metadata-action@v3
      id: metadata
      with:
        images: ${{ env.IMAGE_NAME }}

    - name: Build and push the Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        file: ./Dockerfile
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
  
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-image
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'index.docker.io/${{secrets.DOCKERHUB_USERNAME}}/bcicentral:latest'
